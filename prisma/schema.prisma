generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Users {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  fullName String
  email    String
  username String
  password String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  attendances Attendances[]
}

model Attendances {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())
  status    String
  updatedAt DateTime @updatedAt

  tasks Tasks[]
  user  Users?  @relation(fields: [userId], references: [id])

  activityLogs ActivityLogs[]
}

model ActivityLogs {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  attendanceId  String
  type          String // "login" | "afk" | "back" | "logout"
  reason        String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  attendances   Attendances? @relation(fields: [attendancesId], references: [id])
  attendancesId String?      @db.ObjectId
}

model Tasks {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  status    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  attendances   Attendances? @relation(fields: [attendancesId], references: [id])
  attendancesId String?      @db.ObjectId
}

model ApiKeys {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  key       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Settings {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
